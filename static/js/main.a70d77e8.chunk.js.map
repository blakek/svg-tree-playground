{"version":3,"sources":["drawTree.ts","Drawing.tsx","index.js"],"names":["drawTree","distance","direction","iteration","angle","Math","PI","dx","cos","dy","sin","nextDistance","moveBack","styles","svg","height","width","Tree","useState","setDimensions","rootRef","useRef","useLayoutEffect","handleResize","current","getBoundingClientRect","window","addEventListener","removeEventListener","startingX","startingY","ref","style","viewBox","id","gradientTransform","offset","stopColor","fill","x","y","stroke","strokeWidth","d","min","render","Drawing","document","getElementById"],"mappings":"0JAAO,SAASA,EACdC,GAGS,IAFTC,EAEQ,uDAFI,EACZC,EACQ,uDADI,EAGZ,GAAIA,EAAY,GACd,MAAO,GAGT,IAAMC,GAAqB,IAAZF,EAAmB,KAAOG,KAAKC,GAGxCC,EAAKN,EAAWI,KAAKG,IAAIJ,GACzBK,EAAKR,EAAWI,KAAKK,IAAIN,GAGzBO,EAAeV,EAAW,IAI1BW,EAAWV,KAAeC,EAAY,GAA3B,YAAqCI,EAArC,aAA4CE,GAE7D,MAAM,UAAN,OACKF,EADL,YACWE,EADX,iBAEIT,EAASW,EAAcT,EAAY,EAAGC,EAAY,GAFtD,iBAGIH,EAASW,EAAcT,EAAY,EAAGC,EAAY,GAHtD,iBAIIS,GC2BN,IAAMC,EAAS,CACbC,IAAK,CACHC,OAAQ,QACRC,MAAO,UAIIC,EA1Df,WAAiB,IAAD,EAC6BC,mBAAS,CAAEH,OAAQ,EAAGC,MAAO,IAD1D,0BACLD,EADK,EACLA,OAAQC,EADH,EACGA,MAASG,EADZ,KAERC,EAAUC,iBAAsB,MAEtCC,2BAAgB,WACd,SAASC,IACPJ,EAAcC,EAAQI,QAAQC,yBAQhC,OAJAF,IAEAG,OAAOC,iBAAiB,SAAUJ,GAE3B,WACLG,OAAOE,oBAAoB,SAAUL,MAEtC,IAEH,IAAMM,EAAYb,EAAQ,EACpBc,EAAYf,EAElB,OACE,yBAAKgB,IAAKX,EAASY,MAAOnB,EAAOC,IAAKmB,QAAO,cAASjB,EAAT,YAAkBD,IAC7D,8BACE,oCAAgBmB,GAAG,kBAAkBC,kBAAkB,cACrD,0BAAMC,OAAO,KAAKC,UAAU,SAC5B,0BAAMD,OAAO,MAAMC,UAAU,eAC7B,0BAAMD,OAAO,MAAMC,UAAU,iBAIjC,0BACEC,KAAK,wBACLC,EAAE,IACFC,EAAE,IACFxB,MAAOA,EACPD,OAAQA,IAEV,0BACEuB,KAAK,OACLG,OAAO,OACPC,YAAY,MACZC,EAAC,WAAMd,EAAN,YAAmBC,EAAnB,YAAgC9B,EAC/BK,KAAKuC,IAAI7B,EAAQC,GAAS,S,KC1CpC6B,iBAAO,kBAACC,EAAD,MAAaC,SAASC,eAAe,U","file":"static/js/main.a70d77e8.chunk.js","sourcesContent":["export function drawTree(\n  distance: number,\n  direction = 0,\n  iteration = 0\n): string {\n  // Limit depth based on number of iterations\n  if (iteration > 12) {\n    return \"\";\n  }\n\n  const angle = (direction * 0.15 + 1.5) * Math.PI;\n\n  // Get the relative coordinates to draw to\n  const dx = distance * Math.cos(angle);\n  const dy = distance * Math.sin(angle);\n\n  // Decrease the distance for \"branches\"\n  const nextDistance = distance / 1.2;\n\n  // Move back to draw the next set of lines. Skip moving if this is the last\n  // set of lines.\n  const moveBack = direction === -iteration ? \"\" : `m${-dx},${-dy}`;\n\n  return `\n    l${dx},${dy}\n    ${drawTree(nextDistance, direction + 1, iteration + 1)}\n    ${drawTree(nextDistance, direction - 1, iteration + 1)}\n    ${moveBack}`;\n}\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { drawTree } from \"./drawTree\";\n\nfunction Tree() {\n  const [{ height, width }, setDimensions] = useState({ height: 1, width: 1 });\n  const rootRef = useRef<SVGSVGElement>(null!);\n\n  useLayoutEffect(() => {\n    function handleResize() {\n      setDimensions(rootRef.current.getBoundingClientRect());\n    }\n\n    // Set initial size\n    handleResize();\n    // Resize when the window size changes\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const startingX = width / 2;\n  const startingY = height;\n\n  return (\n    <svg ref={rootRef} style={styles.svg} viewBox={`0 0 ${width} ${height}`}>\n      <defs>\n        <linearGradient id=\"background-fill\" gradientTransform=\"rotate(90)\">\n          <stop offset=\"0%\" stopColor=\"blue\" />\n          <stop offset=\"45%\" stopColor=\"dodgerblue\" />\n          <stop offset=\"95%\" stopColor=\"papayawhip\" />\n        </linearGradient>\n      </defs>\n\n      <rect\n        fill=\"url(#background-fill)\"\n        x=\"0\"\n        y=\"0\"\n        width={width}\n        height={height}\n      />\n      <path\n        fill=\"none\"\n        stroke=\"#110\"\n        strokeWidth=\"1.5\"\n        d={`M${startingX},${startingY} ${drawTree(\n          Math.min(height, width) / 10\n        )}`}\n      />\n    </svg>\n  );\n}\n\nconst styles = {\n  svg: {\n    height: \"100vh\",\n    width: \"100vw\"\n  }\n};\n\nexport default Tree;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Drawing from \"./Drawing\";\nimport \"./index.css\";\n\nrender(<Drawing />, document.getElementById(\"root\"));\n"],"sourceRoot":""}